<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping default-access="field" default-cascade="all">

    <class name="domain.Product" table="tbl_product" lazy="true" discriminator-value="prod">
        <id name="id" type="long" column="product_id">
            <generator class="native"/>
        </id>

        <discriminator column="type" type="string"/>

        <property name="title" column="title" type="java.lang.String"/>
        <property name="price" column="price" type="java.math.BigDecimal"/>
        <property name="stock" column="stock" type="java.lang.Integer"/>
        <property name="mediumType" column="mediumType">
            <type name="org.hibernate.type.EnumType">
                <param name="enumClass">sharedrmi.domain.enums.MediumType</param>
                <param name="type">12</param>
            </type>
        </property>
        <property name="releaseDate" column="releaseDate" type="java.time.LocalDate"/>

        <subclass name="domain.Song" discriminator-value="song">
            <property name="genre" column="genre" type="java.lang.String"/>
            <list name="artists" table="artist_song" cascade="all">
                <key column="song_id"/>
                <index column="idx"/>
                <many-to-many class="domain.Artist" column="artist_id"/>
            </list>
            <set name="inAlbum" table="album_song" inverse="true">
                <key column="song_id"/>
                <many-to-many class="domain.Album" column="album_id"/>
            </set>
        </subclass>

        <subclass name="domain.Album" discriminator-value="album">
            <property name="label" column="label" type="java.lang.String"/>
            <property name="imageUrl" column="imageUrl" type="java.lang.String"/>
            <component name="albumId" class="sharedrmi.domain.valueobjects.AlbumId">
                <property name="albumId" column="albumId" type="java.util.UUID"/>
            </component>
            <set name="songs" table="album_song" cascade="all">
                <key column="album_id"/>
                <many-to-many class="domain.Song" column="song_id"/>
            </set>
        </subclass>

    </class>
</hibernate-mapping>